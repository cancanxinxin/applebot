from apple import *
import unittest


apple1 = [ #0.0672 (123, 137) (151, 156) ... hole??
[248, 394, 441, 454, 459, 465, 466, 465, 472, 516, 504, 485, 456, 250, 228, 234, 393, 468, 472, 453, 428, 434, 448, 449, 459, 461, 472, 425],
[272, 462, 504, 498, 2099, 2100, 2101, 2097, 2101, 2109, 2100, 498, 499, 368, 258, 231, 333, 466, 482, 489, 469, 472, 483, 490, 484, 486, 497, 492], 
[376, 498, 493, 2102, 2099,2097, 2100, 2097, 2098, 2096, 2101, 2098, 2100, 467, 319, 232, 260, 358, 476, 475, 465, 470, 490, 483, 492, 486, 490, 495],
[463, 489, 2098, 2098, 2092, 2101, 2094, 2099, 2095, 2093, 2092, 2094, 2100, 499, 405, 232, 263, 361, 486, 494, 494, 498, 486, 489, 488, 490, 488, 481],
[389, 424, 2140, 2150, 2164, 2169, 517, 513, 511, 516, 2179, 507, 508, 510, 2177, 2091, 254, 398, 538, 519, 505, 500, 509, 500, 491, 488, 491, 450],
[443, 453, 481, 500, 584, 611, 630, 630, 633, 626, 631, 629, 628, 630, 629, 625, 507, 588, 629, 625, 556, 532, 503, 449, 428, 401, 402, 369],
[313, 312, 315, 314, 321, 346, 464, 617, 625, 628, 627, 625, 625, 588, 556, 617, 621, 614, 626, 624, 628, 620, 531, 361, 360, 360, 354, 356],
[308, 309, 318, 310, 317, 322, 325, 417, 576, 622, 623, 609, 547, 498, 492, 551, 617, 622, 620, 622, 622, 623, 583, 373, 367, 359, 361, 359], 
[310, 313, 312, 311, 318, 323, 321, 330, 366, 612, 620, 521, 492, 498, 488, 556, 624, 618, 616, 622, 620, 624, 621, 456, 371, 365, 361, 363],
[314, 311, 312, 314, 316, 312, 325, 324, 329, 588, 578, 489, 492, 491, 476, 595, 613, 615, 617, 620, 621, 617, 614, 543, 379, 356, 366, 370],
[298, 311, 314, 309, 311, 313, 324, 326, 324, 480, 489, 483, 500, 472, 486, 607, 608, 614, 609, 611, 619, 611, 614, 578, 408, 361, 371, 374],
[265, 309, 310, 316, 313, 321, 324, 320, 326, 435, 457, 480, 490, 464, 563, 608, 608, 612, 609, 612, 611, 613, 611, 594, 496, 377, 371, 373],
[236, 269, 317, 318, 316, 318, 321, 328, 349, 458, 457, 471, 478, 483, 556, 577, 571, 571, 578, 573, 576, 571, 562, 533, 448, 372, 365, 363],
[261, 234, 301, 311, 322, 323, 325, 347, 397, 444, 454, 448, 447, 461, 499, 500, 496, 500, 498, 501, 505, 502, 510, 469, 403, 374, 367, 372],
[281, 224, 276, 286, 318, 327, 360, 413, 411, 408, 405, 400, 395, 485, 497, 500, 499, 505, 500, 499, 496, 496, 501, 428, 388, 380, 378, 375],
[301, 249, 306, 317, 347, 367, 443, 416, 408, 408, 400, 384, 403, 480, 484, 487, 497, 490, 489, 491, 493, 499, 505, 443, 390, 367, 377, 374],
[309, 244, 353, 385, 445, 460, 452, 412, 406, 403, 399, 393, 436, 478, 479, 482, 488, 488, 492, 490, 487, 490, 485, 438, 394, 373, 383, 379],
[350, 256, 415, 445, 451, 457, 424, 403, 398, 387, 381, 424, 462, 473, 477, 471, 476, 467, 465, 453, 456, 460, 454, 416, 381, 380, 381, 379],
[342, 267, 334, 420, 415, 409, 397, 391, 390, 374, 375, 438, 448, 458, 461, 458, 459, 464, 462, 459, 455, 453, 445, 411, 383, 375, 376, 376]]

apple2 = [ #0.0672 (88, 165) (116, 179)
[599, 600, 599, 599, 596, 597, 603, 597, 528, 181, 179, 553, 595, 598, 592, 587, 586, 590, 585, 587, 589, 594, 597, 573, 424, 372, 366, 365],
[596, 603, 594, 602, 603, 593, 593, 600, 565, 178, 173, 326, 584, 586, 564, 544, 485, 453, 2112, 429, 481, 568, 574, 504, 310, 361, 368, 362],
[598, 604, 605, 603, 597, 606, 600, 601, 600, 232, 149, 124, 437, 407, 226, 161, 106, 109, 106, 110, 118, 232, 304, 239, 176, 254, 320, 366],
[569, 566, 577, 569, 583, 577, 575, 558, 540, 293, 122, 109, 109, 105, 106, 110, 104, 108, 110, 114, 111, 117, 117, 121, 124, 171, 213, 326],
[1658, 1660, 60, 61, 60, 62, 66, 86, 98, 104, 106, 108, 104, 107, 109, 108, 109, 109, 111, 113, 112, 116, 117, 123, 119, 128, 142, 229],
[1611, 1616, 16, 16, 22, 41, 59, 97, 100, 103, 105, 105, 111, 114, 107, 111, 109, 111, 114, 118, 118, 119, 118, 121, 122, 123, 123, 153],
[0, 0, 0, 0, 16, 63, 80, 104, 102, 103, 105, 104, 111, 109, 109, 109, 112, 107, 114, 116, 119, 117, 118, 123, 121, 122, 126, 129],
[0, 0, 0, 15, 51, 92, 99, 102, 103, 104, 105, 105, 111, 110, 112, 109, 112, 112, 112, 112, 114, 117, 118, 123, 122, 123, 123, 132],
[0, 0, 0, 67, 91, 104, 106, 105, 107, 105, 104, 107, 109, 108, 111, 109, 112, 112, 111, 116, 118, 115, 118, 122, 122, 125, 125, 144],
[0, 0, 47, 101, 106, 101, 101, 103, 103, 108, 104, 108, 109, 107, 110, 109, 110, 105, 114, 112, 114, 113, 118, 121, 123, 123, 129, 154],
[0, 26, 97, 100, 102, 103, 103, 100, 108, 103, 105, 106, 109, 109, 108, 110, 109, 112, 113, 112, 116, 116, 119, 117, 120, 145, 175, 177],
[0, 0, 0, 74, 92, 103, 103, 101, 106, 108, 105, 107, 107, 108, 108, 111, 112, 110, 112, 109, 114, 116, 115, 146, 235, 296, 317, 192],
[0, 0, 0, 0, 0, 51, 76, 99, 106, 104, 104, 107, 108, 109, 110, 108, 109, 108, 112, 113, 113, 118, 151, 338, 391, 438, 425, 215],
[1339, 1339, 1349, 0, 0, 0, 0, 38, 88, 100, 106, 108, 104, 105, 108, 107, 108, 106, 109, 120, 136, 236, 327, 425, 445, 463, 459, 288]]

apple3 = [ #0.0624 (170, 133) (196, 146) ... this looks like real apple
[324, 352, 358, 366, 361, 358, 368, 364, 341, 325, 331, 346, 345, 325, 372, 384, 401, 423, 407, 387, 385, 378, 379, 389, 398, 400],
[343, 350, 366, 413, 421, 417, 346, 326, 330, 376, 442, 438, 359, 341, 453, 478, 486, 489, 488, 471, 446, 442, 421, 442, 471, 482],
[372, 402, 403, 406, 401, 365, 331, 346, 368, 363, 359, 371, 361, 335, 380, 387, 390, 396, 390, 377, 384, 392, 434, 453, 492, 507],
[422, 463, 462, 437, 394, 304, 311, 306, 293, 283, 288, 278, 276, 282, 281, 275, 272, 283, 280, 284, 290, 286, 292, 312, 398, 445],
[420, 446, 410, 317, 294, 282,284, 280, 280, 280, 284, 282, 275, 280, 279, 279, 270, 274, 279, 282, 280, 290, 288, 292, 287, 308],
[450, 326, 294, 284, 294, 290, 276, 281, 279, 279, 277, 275, 280, 277, 275, 273, 273, 275, 281, 285, 283, 283, 283, 286, 290, 290],
[364, 293, 290, 275, 286, 285, 279, 273, 280, 267, 275, 267, 275, 269, 277, 276, 276, 272, 278, 273, 276, 280, 281, 282, 291, 297],
[334, 284, 279, 291, 285, 280, 274, 282, 274, 269, 272, 270, 269, 276, 273, 274, 272, 267, 276, 281, 274, 278, 278, 286, 284, 283],
[408, 289, 297, 275, 279, 286, 272, 272, 276, 271, 265, 272, 266, 267, 271, 273, 282, 279, 272, 281, 279, 280, 280, 277, 285, 300],
[625, 300, 285, 290, 286, 284, 277, 276, 279, 276, 276, 275, 271, 277, 273, 280, 277, 279, 276, 282, 283, 276, 284, 291, 288, 290],
[629, 512, 328, 291, 290, 284, 275, 286, 283, 272, 275, 276, 273, 279, 278, 278, 272, 276, 280, 280, 284, 292, 290, 287, 301, 344],
[627, 620, 594, 329, 293, 284, 283, 287, 284, 280, 281, 286, 287, 286, 276, 283, 278, 276, 282, 286, 290, 283, 309, 339, 453, 488],
[619, 621, 620, 603, 495, 315, 294, 286, 289, 287, 285, 288, 295, 286, 277, 283, 281, 278, 285, 298, 394, 453, 537, 529, 529, 566]]

apple4 = [  # 0.0576 (75, 149) (99, 159) ... looks like leave
[543, 581, 596, 581, 437, 385, 346, 334, 285, 255, 248, 284, 319, 438, 525, 586, 603, 604, 604, 604, 603, 599, 604, 603], 
[592, 587, 419, 308, 214, 212, 204, 204, 203, 206, 204, 199, 198, 199, 212, 346, 548, 582, 520, 587, 596, 607, 598, 601], 
[579, 2123, 213, 215, 210, 208, 207, 204, 201, 199, 205, 199, 202, 194, 198, 199, 245, 298, 213, 372, 590, 601, 587, 575], 
[463, 243, 209, 209, 204, 207, 201, 201, 204, 202, 196, 198, 201, 200, 200, 196, 208, 195, 198, 203, 508, 556, 464, 517],
[584, 563, 380, 302, 207, 203, 202, 201, 200, 202, 197, 197, 198, 193, 195, 195, 198, 199, 196, 202, 214, 278, 536, 587],
[592, 586, 582, 573, 421, 324, 209, 202, 203, 199, 198, 198, 199, 195, 195, 199, 199, 195, 200, 201, 209, 242, 527, 558],
[591, 584, 585, 590, 581, 574, 526, 441, 356, 293, 266, 228, 223, 213, 211, 203, 245, 268, 272, 357, 517, 523, 545, 555],
[587, 601, 586, 588, 585, 585, 584, 584, 584, 571, 572, 551, 528, 480, 427, 402, 513, 522, 568, 582, 587, 577, 579, 587],
[591, 596, 590, 597, 585, 581, 580, 586, 586, 587, 586, 579, 562, 413, 403, 556, 581, 588, 590, 589, 593, 588, 590, 584],
[597, 589, 594, 587, 579, 587, 579, 584, 581, 577, 569, 529, 507, 547, 565, 593, 587, 592, 590, 590, 593, 589, 580, 549]]

class AppleTest( unittest.TestCase ): 
    def testSaveAsCloud( self ):
        a = Apple( np.array( apple3 ) )
        a.saveAsCloud( "apple.txt" )

    def testSphere( self ):
        fourPoints = [ (0,0,0), (2,0,0), (0,2,0), (0,0,2) ]
        tmp = Apple()
        self.assertEqual( tmp.sphere( fourPoints ), ( (1.0,1.0,1.0), math.sqrt(3.0) ) )

    def testFitSphere( self ):
        a = Apple( np.array( apple3 ) )
        self.assertEqual( a.fitSphere( maxDist = 1.0, numIter=1 ), 1.0 )
        self.assertAlmostEqual( a.fitSphere( maxDist = 0.01, numIter=1 ), 0.65384, 3 )
        self.assertAlmostEqual( a.fitSphere( maxDist = 0.01, numIter=1 ), 0.52366, 3 )
        self.assertAlmostEqual( a.fitSphere( maxDist = 0.01, numIter=1000, minRadius=0.03, maxRadius=0.1 ), 0.6982248, 3 )

if __name__ == "__main__":
    unittest.main() 

# vim: expandtab sw=4 ts=4

